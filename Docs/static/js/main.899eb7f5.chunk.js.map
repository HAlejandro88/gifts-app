{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","request","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","categoria","ReactDOM","render","document","getElementById"],"mappings":"iMAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAQT,EAAcU,SAfrB,SAACP,GACzBQ,QAAQC,IAAIT,GACZF,EAAcE,EAAEU,OAAOJ,YCPlBK,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACI,yBAAKC,UAAU,8CACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCJJK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,sDAEGG,MAAMR,GAFT,cAEbS,EAFa,gBAGIA,EAAQC,OAHZ,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QARvB,kBAWZY,GAXY,4CAAH,sDCEPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZtB,mBAAS,CAC/B4B,KAAM,GACNQ,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAbAC,qBAAU,WACNlB,EAAQC,GACDkB,MAAK,SAAAC,GACFC,YAAW,WACTJ,EAAS,CACLV,KAAMa,EACNL,SAAS,MAEZ,UAEd,CAACd,IAGGe,EDjB2BM,CAAarB,GAAjCW,EAFuB,EAE7BL,KAAcQ,EAFe,EAEfA,QAGtB,OACI,oCACI,4BAAMd,GACJc,GAAW,4CACb,yBAAKlB,UAAU,aAEHe,EAAOH,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eAAaa,IAAMb,EAAIC,IAAUD,UES9Cc,EApBM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,gBAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAKvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ+C,EAAWhB,KAAI,SAAAiB,GAAS,OAAI,kBAAC,EAAD,CAASH,IAAMG,EAAYzB,SAAWyB,UCZtFC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.899eb7f5.chunk.js","sourcesContent":["import React,{ useState }  from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setinputValue] = useState('')\n\n    const handledinputChanged = (e) => {\n        console.log(e);\n        setinputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(cats => [ inputValue, ...cats]);\n            setinputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input type=\"text\" value={ inputValue }  onChange={ handledinputChanged } />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\nexport default AddCategory\n","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n    return (\n        <div className=\"card animate__animated animate__fadeInDown\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","\n\nexport const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=zWgr1JZwicNsrJtnNrmQlBorU4nTN2xZ`;\n    const request = await fetch(url);\n    const { data } = await request.json();\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n   \n\n    return (\n        <>\n            <h3>{ category }</h3>\n            { loading && <p>Esta Cargando</p>}\n            <div className=\"card-grid\">\n                    {\n                        images.map( img => (\n                            <GifGridItem key={ img.id } { ...img } />\n                        ))\n                    }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n\n    useEffect(() => {\n        getGifs(category)\n              .then(imgs => {\n                  setTimeout(() => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n                  }, 3000)\n              })\n    }, [category]) // evaluo unicamente cuando la categoria cambia\n\n\n    return state\n}","import React,{ useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Dragon Ball']);\n\n\n    return (\n        <>\n            <h2>GifexpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n\n            <ol>\n                {\n                    categories.map(categoria => <GifGrid key={ categoria } category={ categoria } />)\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}